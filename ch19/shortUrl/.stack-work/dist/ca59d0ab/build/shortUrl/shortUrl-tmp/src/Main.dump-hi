
==================== FINAL INTERFACE ====================
2018-06-21 11:40:59.2740257 UTC

interface main@main:Main 8002
  interface hash: 5c0168ae2071ff4b1ded2342e502e73c
  ABI hash: de627988e4c9eb7624a8b7233cbec4e2
  export-list hash: 73baa5600bb334cdfa3f0682ee152e7d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 799869cb780a980565572552d0b266cc
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.alphaNum
  Main.app
  Main.getURI
  Main.linkShorty
  Main.main
  Main.randomElement
  Main.saveURI
  Main.shortyAintUri
  Main.shortyCreated
  Main.shortyFound
  Main.shortyGen
module dependencies:
package dependencies: HTTP-4000.3.12@HTTP-4000.3.12-HDHZcxo3Oqf5KTNnvrTNml
                      Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-1.4.0.0@aeson-1.4.0.0-9qocgF0L1hMCALuRKJUnP2
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-GWMjNQQQaabJUdbkqXA095
                      asn1-parse-0.9.4@asn1-parse-0.9.4-EYYZzBg5L2eHSldSNnwQRN
                      asn1-types-0.3.2@asn1-types-0.3.2-DVOEL1a3vUoKUmVo85WuhJ
                      async-2.2.1@async-2.2.1-C4u7mT3xYai3WHBaJ38ZtO
                      attoparsec-0.13.2.2@attoparsec-0.13.2.2-1K6XHSMqGc57rQNrMtvLTm
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.10.1@base-compat-0.10.1-I0duA57O7WcBf3VDFpA62T
                      basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.1.0@blaze-builder-0.4.1.0-B9erBEPpPMw47fnCR40aFz
                      bsb-http-chunked-0.0.0.2@bsb-http-chunked-0.0.0.2-JedOkvmQVsnDbcn4lfb8xI
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      bytestring-lexing-0.5.0.2@bytestring-lexing-0.5.0.2-6li4dsGccWCHhBeSRzrvae
                      case-insensitive-1.2.0.11@case-insensitive-1.2.0.11-6v1PL4i0FmaC1BirxkXJub
                      cereal-0.5.5.0@cereal-0.5.5.0-4mI7cH76utd5msQR92JWfO
                      containers-0.5.7.1@containers-0.5.7.1
                      cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.4@dlist-0.8.0.4-DYoLbOwuv6JKPcpACYZ83L
                      errors-2.3.0@errors-2.3.0-3CDzjVXTc5r8HsuiAy2P9V
                      exceptions-0.10.0@exceptions-0.10.0-2id30NZdzV4GtnZQrgbP5J
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.7.0@hashable-1.2.7.0-ExYn3eXYSfg8Z5H8Kwbxlo
                      hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV
                      hourglass-0.2.11@hourglass-0.2.11-kRAxBgUIAyLwrHsPAnPri
                      http-date-0.0.7@http-date-0.0.7-FRAX856RwwBBE34HQHcHms
                      http-types-0.12.1@http-types-0.12.1-ILi0zHeDNM69IIalWnNAKy
                      http2-1.6.3@http2-1.6.3-As8qRNlCYhvKoVyBKYzYeS integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2.1@integer-logarithms-1.0.2.1-Cs6q0tn7mAJ1TWj5swCwSq
                      iproute-1.7.5@iproute-1.7.5-JUpEDeha6POIrVjaJeDsr
                      memory-0.14.16@memory-0.14.16-CSzIDXtB3BZLojekBbov0d
                      monad-control-1.0.2.3@monad-control-1.0.2.3-CblOHJLDI7p731QZkV216z
                      mtl-2.2.2@mtl-2.2.2-IUStvhCM9Fb6Pb0KlPCV7h
                      network-2.7.0.0@network-2.7.0.0-Klo9AvFHXEXEH3Lzayjn0u
                      network-uri-2.6.1.0@network-uri-2.6.1.0-LDdDO4YN4PD3xGsV5ozfaC
                      parsec-3.1.13.0@parsec-3.1.13.0-6f26OhV1xboLx4l77puTQN
                      pem-0.2.4@pem-0.2.4-3XE4CtUVO8NHLFzjtZ2Jr2
                      primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo
                      psqueues-0.2.7.0@psqueues-0.2.7.0-94Rp0Z6dFL1CCwPJIhVZbZ
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-FAqPXYX9UsJ5xC9mG2bESX
                      regex-compat-0.95.1@regex-compat-0.95.1-8oqKQwKcvIXHJQ8yA1NRJ8
                      regex-posix-0.95.2@regex-posix-0.95.2-DqBrGVkCSgwKH47WudwsWy
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-JsOf4aJlIDWDU8VD1vT0n3
                      resourcet-1.2.1@resourcet-1.2.1-cFLH3Lu02e8Xe8UJx4pjX
                      scanner-0.2@scanner-0.2-4lcLejGin4EFaBwHS4mjDD
                      scientific-0.3.6.2@scientific-0.3.6.2-IcsccVzywYE3hu8262LDNq
                      scotty-0.11.1@scotty-0.11.1-18weEVZu461HmnzeQAuBSS
                      stm-2.4.5.0@stm-2.4.5.0-JxMPI9z2LO82UTKmT3QQt6
                      streaming-commons-0.2.0.0@streaming-commons-0.2.0.0-FdcczMUc7fWBG1v3MmBaSo
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-JB8QxbqnIhjLCB2R3uAUj4
                      template-haskell-2.11.1.0
                      text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.4@time-locale-compat-0.1.1.4-Jmg1O4L9NaoGYGG2DN2Zu4
                      tls-1.4.1@tls-1.4.1-HFjD9UnlBD088sxypsJOXl
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.5.2@transformers-base-0.4.5.2-F29GVKE8PqR2875A0q8bjp
                      transformers-compat-0.6.2@transformers-compat-0.6.2-56QlPzJosH7Biiu3wdRzje
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-4J6CourUSTG17Ll1LWtjiq
                      unliftio-core-0.1.1.0@unliftio-core-0.1.1.0-AvgipFDoXPm9BzWTm1YuXj
                      unordered-containers-0.2.9.0@unordered-containers-0.2.9.0-G9hgtIe52XD5gxwrgr4F52
                      uuid-types-1.0.3@uuid-types-1.0.3-CESeVKfl8emE02QIg7RHbb
                      vault-0.3.1.1@vault-0.3.1.1-2wv1qNfLiJdFKVUCLDrp83
                      vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE
                      wai-3.2.1.2@wai-3.2.1.2-HIaConr3UkvGqmGGjKM1Dt
                      wai-extra-3.0.22.1@wai-extra-3.0.22.1-AS6EBQyYJOXDUoHh03juv1
                      warp-3.2.22@warp-3.2.22-Gh2sheP4HvcHce7xW5ZCI
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.3@x509-1.7.3-FNQf5DLnmQ9VeSXzppYKk
                      x509-store-1.6.6@x509-store-1.6.6-9LnVllwt4kSI9Z3CEs4UQE
                      x509-validation-1.6.10@x509-validation-1.6.10-BHKDY6aEYqZAqshRUgn72K
orphans: attoparsec-0.13.2.2@attoparsec-0.13.2.2-1K6XHSMqGc57rQNrMtvLTm:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.2.2@attoparsec-0.13.2.2-1K6XHSMqGc57rQNrMtvLTm:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.Block
         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.UArray.Base
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.7.0@hashable-1.2.7.0-ExYn3eXYSfg8Z5H8Kwbxlo:Data.Hashable.Generic
         network-2.7.0.0@network-2.7.0.0-Klo9AvFHXEXEH3Lzayjn0u:Network.Socket
         regex-base-0.93.2@regex-base-0.93.2-FAqPXYX9UsJ5xC9mG2bESX:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-DqBrGVkCSgwKH47WudwsWy:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex-posix-0.95.2-DqBrGVkCSgwKH47WudwsWy:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex-posix-0.95.2-DqBrGVkCSgwKH47WudwsWy:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex-posix-0.95.2-DqBrGVkCSgwKH47WudwsWy:Text.Regex.Posix.String
         stm-2.4.5.0@stm-2.4.5.0-JxMPI9z2LO82UTKmT3QQt6:Control.Monad.STM
         text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text
         text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text.Lazy
         text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector.Unboxed
family instance modules: aeson-1.4.0.0@aeson-1.4.0.0-9qocgF0L1hMCALuRKJUnP2:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2@attoparsec-0.13.2.2-1K6XHSMqGc57rQNrMtvLTm:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.Block.Base
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.Monad
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.MutableBuilder
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.Nat
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.NonEmpty
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.Numerical.Subtractive
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.PrimType
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.String
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.String.Encoding.ASCII7
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.String.Encoding.UTF16
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.String.Encoding.UTF32
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.Types.OffsetSize
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.UArray.Base
                         basement-0.0.7@basement-0.0.7-1bkOXxfMuXYBANigq80U8F:Basement.UTF8.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.ECC
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Error.Types
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Blake2
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Blake2b
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Blake2bp
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Blake2s
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Blake2sp
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Keccak
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.MD2
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.MD4
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.MD5
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.RIPEMD160
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA1
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA224
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA256
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA3
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA384
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA512
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHA512t
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.SHAKE
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Skein256
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Skein512
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Tiger
                         cryptonite-0.25@cryptonite-0.25-HUSUXmfJTZfKtL2BBWx80G:Crypto.Hash.Whirlpool
                         dlist-0.8.0.4@dlist-0.8.0.4-DYoLbOwuv6JKPcpACYZ83L:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Protocol
                         hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Transactions
                         hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Types
                         iproute-1.7.5@iproute-1.7.5-JUpEDeha6POIrVjaJeDsr:Data.IP.Addr
                         iproute-1.7.5@iproute-1.7.5-JUpEDeha6POIrVjaJeDsr:Data.IP.Range
                         monad-control-1.0.2.3@monad-control-1.0.2.3-CblOHJLDI7p731QZkV216z:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-LDdDO4YN4PD3xGsV5ozfaC:Network.URI
                         primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo:Control.Monad.Primitive
                         primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo:Data.Primitive.Array
                         primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo:Data.Primitive.ByteArray
                         primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo:Data.Primitive.PrimArray
                         primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo:Data.Primitive.SmallArray
                         primitive-0.6.4.0@primitive-0.6.4.0-GNLAlD4yr117oBmLUp0dWo:Data.Primitive.UnliftedArray
                         resourcet-1.2.1@resourcet-1.2.1-cFLH3Lu02e8Xe8UJx4pjX:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.1@scotty-0.11.1-18weEVZu461HmnzeQAuBSS:Web.Scotty.Internal.Types
                         tagged-0.8.5@tagged-0.8.5-JB8QxbqnIhjLCB2R3uAUj4:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text
                         text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text.Lazy
                         unordered-containers-0.2.9.0@unordered-containers-0.2.9.0-G9hgtIe52XD5gxwrgr4F52:Data.HashMap.Base
                         unordered-containers-0.2.9.0@unordered-containers-0.2.9.0-G9hgtIe52XD5gxwrgr4F52:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-CESeVKfl8emE02QIg7RHbb:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-CESeVKfl8emE02QIg7RHbb:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-69Ey08pydqC3iAlUs5hJqE:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Control.Monad f915f187cea611986ebb12dbc69279ab
import  -/  base-4.9.1.0:Control.Monad.IO.Class 3f1875e753ac8c44dae64dc062ea742e
import  -/  base-4.9.1.0:Data.Either 186ef9adf6b47e24f39efe9b2e18e352
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 53131bf786c5438dfe07ccfe89b878d8
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal f93c775d03517ec3bd95675a19a7df57
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis b2c0f1a4ea58a374a822cd1aa603cbbb
import  -/  hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Commands a1c9070663891293c3187f99fb1a5cb2
import  -/  hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Core cde1e82591e9e0d7f83bca2d02dab1c1
import  -/  hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.ManualCommands fb853979f6327245bcf88744fe24a6be
import  -/  hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Protocol 417d9de817a85de616ba5e003dd31e2c
import  -/  hedis-0.10.2@hedis-0.10.2-BnCuzaldMSLJHShrgLxvXV:Database.Redis.Types 0ff3cb70e8a6146a4437fe67b8fe2504
import  -/  network-uri-2.6.1.0@network-uri-2.6.1.0-LDdDO4YN4PD3xGsV5ozfaC:Network.URI 964592a4c7cb9dc071f1679fa5c3f213
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random 4c90117f915e12291e0c5f588320bf66
import  -/  scotty-0.11.1@scotty-0.11.1-18weEVZu461HmnzeQAuBSS:Web.Scotty d0a229e1940632c369ff9c7342a1b7ad
import  -/  text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text.Encoding 2f8eff49c1e29931d1628b342ff7e47b
import  -/  text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text.Internal.Lazy d017fd7d9b9c770000fa5c40c0645e8c
import  -/  text-1.2.3.0@text-1.2.3.0-CsLQvkCbOSoGjbNqFpkphE:Data.Text.Lazy 24241e919a963382ef98459e42b63e93
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
e62b0e7c045151597fcae873a304a754
  $wapp ::
    Database.Redis.Core.Connection
    -> Web.Scotty.Internal.Types.ScottyState
         Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> (# (),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text GHC.Types.IO #)
  {- Arity: 2,
     Strictness: <L,U(U,C(U),U(U),A,U(U),U(U,U,U),A)><L,1*U(U,U,U)>,
     Inline: [0] -}
13e243beea9600c668b87941a365fa17
  $wgetURI ::
    GHC.Types.IO Database.Redis.ProtocolPipelining.Connection
    -> (Database.Redis.ProtocolPipelining.Connection
        -> GHC.Types.IO ())
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool Database.Redis.ProtocolPipelining.Connection)
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Database.Redis.Protocol.Reply
            (GHC.Base.Maybe Data.ByteString.Internal.ByteString) #)
  {- Arity: 7,
     Strictness: <L,U><L,1*C1(U)><L,1*U(1*U)><L,1*U(U)><L,1*U(U,U,U)><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Redis.ProtocolPipelining.Connection)
                   (ww1 :: Database.Redis.ProtocolPipelining.Connection
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool Database.Redis.ProtocolPipelining.Connection))
                   (w :: Data.ByteString.Internal.ByteString)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Data.Pool.$w$swithResource
                   @ Database.Redis.ProtocolPipelining.Connection
                   @ (Data.Either.Either
                        Database.Redis.Protocol.Reply
                        (GHC.Base.Maybe Data.ByteString.Internal.ByteString))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (conn :: Database.Redis.ProtocolPipelining.Connection)[OneShot]
                      (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.newMutVar#
                           @ Database.Redis.Protocol.Reply
                           @ GHC.Prim.RealWorld
                           Database.Redis.Core.checkedConnect6
                           eta of ds { (#,#) ipv ipv1 ->
                    case ((Database.Redis.Core.sendRequest
                             @ Database.Redis.Core.Redis
                             @ (Data.Either.Either Database.Redis.Protocol.Reply)
                             @ (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                             Database.Redis.Core.$fRedisCtxRedisEither
                             Database.Redis.Commands.brpoplpush2
                               `cast`
                             (Sym (Database.Redis.Types.N:RedisResult[0]
                                       <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N))
                             (GHC.Types.:
                                @ Data.ByteString.Internal.ByteString
                                Database.Redis.Commands.get1
                                (GHC.Types.:
                                   @ Data.ByteString.Internal.ByteString
                                   w
                                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString))))
                            `cast`
                          (Trans
                               (Database.Redis.Core.N:Redis[0] <Data.Either.Either
                                                                  Database.Redis.Protocol.Reply
                                                                  (GHC.Base.Maybe
                                                                     Data.ByteString.Internal.ByteString)>_N)
                               (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Database.Redis.Core.RedisEnv>_R
                                    <GHC.Types.IO>_R
                                    <Data.Either.Either
                                       Database.Redis.Protocol.Reply
                                       (GHC.Base.Maybe Data.ByteString.Internal.ByteString)>_N))
                            (Database.Redis.Core.Env
                               conn
                               (GHC.STRef.STRef
                                  @ GHC.Prim.RealWorld
                                  @ Database.Redis.Protocol.Reply
                                  ipv1)
                                 `cast`
                               (Sym (GHC.IORef.N:IORef[0]) <Database.Redis.Protocol.Reply>_N)))
                           `cast`
                         (GHC.Types.N:IO[0]
                              <Data.Either.Either
                                 Database.Redis.Protocol.Reply
                                 (GHC.Base.Maybe Data.ByteString.Internal.ByteString)>_R)
                           ipv of ds1 { (#,#) ipv2 ipv3 ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ Database.Redis.Protocol.Reply
                           ipv1
                           ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                    case ipv5 of ds3 { DEFAULT -> (# ipv4, ipv3 #) } } } })
                     `cast`
                   (<Database.Redis.ProtocolPipelining.Connection>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Database.Redis.Protocol.Reply
                                     (GHC.Base.Maybe Data.ByteString.Internal.ByteString)>_R))
                   w1) -}
e5fb7a756ec03ff1c0814a29619f3b1a
  $wloop ::
    GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
532da096d66048d100708bf15129bde1
  $wsaveURI ::
    GHC.Types.IO Database.Redis.ProtocolPipelining.Connection
    -> (Database.Redis.ProtocolPipelining.Connection
        -> GHC.Types.IO ())
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Data.Vector.Vector
         (Data.Pool.LocalPool Database.Redis.ProtocolPipelining.Connection)
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Database.Redis.Protocol.Reply Database.Redis.Types.Status #)
  {- Arity: 8,
     Strictness: <L,U><L,1*C1(U)><L,1*U(1*U)><L,1*U(U)><L,1*U(U,U,U)><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.IO
                            Database.Redis.ProtocolPipelining.Connection)
                   (ww1 :: Database.Redis.ProtocolPipelining.Connection
                           -> GHC.Types.IO ())
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: Data.Vector.Vector
                             (Data.Pool.LocalPool Database.Redis.ProtocolPipelining.Connection))
                   (w :: Data.ByteString.Internal.ByteString)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Data.Pool.$w$swithResource
                   @ Database.Redis.ProtocolPipelining.Connection
                   @ (Data.Either.Either
                        Database.Redis.Protocol.Reply Database.Redis.Types.Status)
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (conn :: Database.Redis.ProtocolPipelining.Connection)[OneShot]
                      (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.newMutVar#
                           @ Database.Redis.Protocol.Reply
                           @ GHC.Prim.RealWorld
                           Database.Redis.Core.checkedConnect6
                           eta of ds { (#,#) ipv ipv1 ->
                    case ((Database.Redis.Core.auth_$ssendRequest
                             (GHC.Types.:
                                @ Data.ByteString.Internal.ByteString
                                Database.Redis.ManualCommands.set1
                                (GHC.Types.:
                                   @ Data.ByteString.Internal.ByteString
                                   w
                                   (GHC.Types.:
                                      @ Data.ByteString.Internal.ByteString
                                      w1
                                      (GHC.Types.[] @ Data.ByteString.Internal.ByteString)))))
                            `cast`
                          (Trans
                               (Database.Redis.Core.N:Redis[0] <Data.Either.Either
                                                                  Database.Redis.Protocol.Reply
                                                                  Database.Redis.Types.Status>_N)
                               (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Database.Redis.Core.RedisEnv>_R
                                    <GHC.Types.IO>_R
                                    <Data.Either.Either
                                       Database.Redis.Protocol.Reply
                                       Database.Redis.Types.Status>_N))
                            (Database.Redis.Core.Env
                               conn
                               (GHC.STRef.STRef
                                  @ GHC.Prim.RealWorld
                                  @ Database.Redis.Protocol.Reply
                                  ipv1)
                                 `cast`
                               (Sym (GHC.IORef.N:IORef[0]) <Database.Redis.Protocol.Reply>_N)))
                           `cast`
                         (GHC.Types.N:IO[0]
                              <Data.Either.Either
                                 Database.Redis.Protocol.Reply Database.Redis.Types.Status>_R)
                           ipv of ds1 { (#,#) ipv2 ipv3 ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ Database.Redis.Protocol.Reply
                           ipv1
                           ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                    case ipv5 of ds3 { DEFAULT -> (# ipv4, ipv3 #) } } } })
                     `cast`
                   (<Database.Redis.ProtocolPipelining.Connection>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Database.Redis.Protocol.Reply Database.Redis.Types.Status>_R))
                   w2) -}
01285368f662c521ebe5bdf5282f41a7
  alphaNum :: GHC.Base.String
  {- Unfolding: (Main.alphaNum_go 65#) -}
c7dd3c3cf6688810b348f9ec15f17cf1
  alphaNum_go :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,U> -}
8258dd346d95f8d7e33b4c7374f2124d
  app :: Database.Redis.Core.Connection -> Web.Scotty.ScottyM ()
  {- Arity: 2,
     Strictness: <L,U(U,C(U),U(U),A,U(U),U(U,U,U),A)><L,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Main.app1
                  `cast`
                (<Database.Redis.Core.Connection>_R
                 ->_R Trans
                          (<Web.Scotty.Internal.Types.ScottyState
                              Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                           ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                         <((),
                                           Web.Scotty.Internal.Types.ScottyState
                                             Data.Text.Internal.Lazy.Text GHC.Types.IO)>_R))
                          (Trans
                               (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                         <Web.Scotty.Internal.Types.ScottyState
                                            Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                         <Data.Functor.Identity.Identity>_R
                                         <()>_N))
                               (Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                         <Data.Text.Internal.Lazy.Text>_N
                                         <GHC.Types.IO>_N) <()>_N))) -}
cd59fdb0dd008c0131d799eb8e0ab77d
  app1 ::
    Database.Redis.Core.Connection
    -> Web.Scotty.Internal.Types.ScottyState
         Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> ((),
        Web.Scotty.Internal.Types.ScottyState
          Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 2,
     Strictness: <L,U(U,C(U),U(U),A,U(U),U(U,U,U),A)><L,1*U(U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Redis.Core.Connection)
                   (w1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO) ->
                 case Main.$wapp w w1 of ww { (#,#) ww1 ww2 -> (ww1, ww2) }) -}
d212fd2116c1854908ede3c8881222ce
  getURI ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.IO
         (Data.Either.Either
            Database.Redis.Protocol.Reply
            (GHC.Base.Maybe Data.ByteString.Internal.ByteString))
  {- Arity: 3,
     Strictness: <S,1*U(U,1*C1(U),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getURI1
                  `cast`
                (<Database.Redis.Core.Connection>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  Database.Redis.Protocol.Reply
                                  (GHC.Base.Maybe Data.ByteString.Internal.ByteString)>_R)) -}
43c950741309bb7b43387a45205d8452
  getURI1 ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Database.Redis.Protocol.Reply
            (GHC.Base.Maybe Data.ByteString.Internal.ByteString) #)
  {- Arity: 3,
     Strictness: <S,1*U(U,1*C1(U),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.Redis.Core.Connection)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Database.Redis.Core.N:Connection[0]) of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Main.$wgetURI ww1 ww2 ww3 ww5 ww6 w1 w2 }) -}
040a1e3167a36b482f193123a06bb73d
  linkShorty :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (shorty :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n1 :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n1 Main.linkShorty2)
                   (GHC.Base.augment
                      @ GHC.Types.Char
                      (\ @ b
                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                         (n1 :: b)[OneShot] ->
                       GHC.Base.foldr @ GHC.Types.Char @ b c n1 shorty)
                      Main.linkShorty1)) -}
3bbf09d38b7604c353ff89e07d493c2f
  linkShorty1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\">Copy and paste your short URL</a>"#) -}
5169bfc50c8da5ec5c35526b513edb87
  linkShorty2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<a href=\""#) -}
4747862598da1e86bdb001a01fffa357
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
23e54b181ae1f0a8e07d4aeecdac51a5
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Database.Redis.Core.$wconnect
                        Database.Redis.Core.defaultConnectInfo6
                        Database.Redis.Core.defaultConnectInfo4
                        (GHC.Base.Nothing @ Data.ByteString.Internal.ByteString)
                        Database.Redis.Core.defaultConnectInfo3
                        50#
                        Database.Redis.Core.defaultConnectInfo1
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.N:NominalDiffTime[0])))
                        (GHC.Base.Nothing @ Data.Time.Clock.UTC.NominalDiffTime)
                        (GHC.Base.Nothing @ Network.TLS.Parameters.ClientParams)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (Web.Scotty.Trans.scottyOptsT
                    @ GHC.Types.IO
                    @ GHC.Types.IO
                    @ Data.Text.Internal.Lazy.Text
                    GHC.Base.$fMonadIO
                    Control.Monad.IO.Class.$fMonadIOIO
                    Main.main2
                    (GHC.Base.id @ (GHC.Types.IO Network.Wai.Internal.Response))
                    (Main.app1 ipv1)
                      `cast`
                    (Trans
                         (<Web.Scotty.Internal.Types.ScottyState
                             Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <((),
                                          Web.Scotty.Internal.Types.ScottyState
                                            Data.Text.Internal.Lazy.Text GHC.Types.IO)>_R))
                         (Trans
                              (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                        <Web.Scotty.Internal.Types.ScottyState
                                           Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                        <Data.Functor.Identity.Identity>_R
                                        <()>_N))
                              (Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                        <Data.Text.Internal.Lazy.Text>_N
                                        <GHC.Types.IO>_N) <()>_N))))
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv }) -}
679522c792d5d5b8710b080cd1357d2e
  main2 :: Web.Scotty.Internal.Types.Options
  {- Unfolding: (Web.Scotty.Internal.Types.Options
                   Web.Scotty.Internal.Types.$fDefaultOptions1
                   Main.main3) -}
307566854a7128983487911bc6a45485
  main3 :: Network.Wai.Handler.Warp.Settings.Settings
  {- Unfolding: (Network.Wai.Handler.Warp.Settings.Settings
                   Main.main4
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
0eb618818c699b2d070d401ddbe588fb
  main4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3000#) -}
6debffad2c372a128db302df44813482
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
219e230851937f3fe0263de05bc0a468
  randomElement :: GHC.Base.String -> GHC.Types.IO GHC.Types.Char
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.randomElement1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Char>_R)) -}
e22c848cb25e6a32c0e8bff314b6a81e
  randomElement1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (xs :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Random.$fRandomInt3
                        (Main.randomElement2,
                         case GHC.List.$wlenAcc @ GHC.Types.Char xs 0# of ww2 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.-# ww2 1#) })
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.List.!! @ GHC.Types.Char xs ipv1 #) }) -}
573f49dfa963ccaa0d9a2d79a64affca
  randomElement2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
af51630f14f1653b8f74600191c10e6b
  saveURI ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.IO
         (Data.Either.Either
            Database.Redis.Protocol.Reply Database.Redis.Types.Status)
  {- Arity: 4,
     Strictness: <S,1*U(U,1*C1(U),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.saveURI1
                  `cast`
                (<Database.Redis.Core.Connection>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  Database.Redis.Protocol.Reply Database.Redis.Types.Status>_R)) -}
7e69ff827568870618ad915c0e448f63
  saveURI1 ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Database.Redis.Protocol.Reply Database.Redis.Types.Status #)
  {- Arity: 4,
     Strictness: <S,1*U(U,1*C1(U),1*U(1*U),A,1*U(U),1*U(U,U,U),A)><L,U><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.Redis.Core.Connection)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Data.ByteString.Internal.ByteString)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Database.Redis.Core.N:Connection[0]) of ww { Data.Pool.Pool ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Main.$wsaveURI ww1 ww2 ww3 ww5 ww6 w1 w2 w3 }) -}
f2f9ab40a20ace1bce52e6e013b416cc
  shortyAintUri ::
    Data.Text.Internal.Lazy.Text -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (uri :: Data.Text.Internal.Lazy.Text) ->
                 Main.shortyAintUri_go31 uri Main.shortyAintUri1) -}
473cc071cc05ef111fb7021e97ad8983
  shortyAintUri1 :: [Data.Text.Internal.Lazy.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Lazy.Text
                   Main.shortyAintUri2
                   (GHC.Types.[] @ Data.Text.Internal.Lazy.Text)) -}
4b2bfc330972be7af5c0c681338ca7c6
  shortyAintUri2 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString#
                   " wasn't a url, did you forget http://?"#) -}
00c3b8ea49e5da073a98d946e4a512a3
  shortyAintUri_go31 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
1969e956b9f59cdbb1049a28cafa26b0
  shortyCreated ::
    GHC.Show.Show a =>
    a -> GHC.Base.String -> Data.Text.Internal.Lazy.Text
  {- Arity: 3, Strictness: <S(LC(S)L),1*U(A,1*C1(U),A)><L,U><L,1*U>,
     Unfolding: (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (resp :: a)
                   (shawty :: GHC.Base.String) ->
                 case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        (GHC.Show.show @ a $dShow resp) of dt { DEFAULT ->
                 Main.shortyCreated_go1
                   (Main.shortyCreated_outer4 dt)
                   (GHC.Types.:
                      @ Data.Text.Internal.Lazy.Text
                      Main.shortyCreated1
                      (GHC.Types.:
                         @ Data.Text.Internal.Lazy.Text
                         (case GHC.Base.map
                                 @ GHC.Types.Char
                                 @ GHC.Types.Char
                                 Data.Text.Internal.safe
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    Main.linkShorty2
                                    (GHC.Base.++
                                       @ GHC.Types.Char
                                       shawty
                                       Main.linkShorty1)) of dt1 { DEFAULT ->
                          Main.shortyCreated_outer3 dt1 })
                         (GHC.Types.[] @ Data.Text.Internal.Lazy.Text))) }) -}
d4004e38fa50ab0f1117a861d896c4a4
  shortyCreated1 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# " shorty is: "#) -}
e2ca384cfefdd2873c3f34dffff08953
  shortyCreated_$sshortyCreated ::
    Data.Either.Either
      Database.Redis.Protocol.Reply Database.Redis.Types.Status
    -> GHC.Base.String -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (resp :: Data.Either.Either
                              Database.Redis.Protocol.Reply Database.Redis.Types.Status)
                   (shawty :: GHC.Base.String) ->
                 let {
                   karg :: Data.Text.Internal.Lazy.Text
                   = case GHC.Base.map
                            @ GHC.Types.Char
                            @ GHC.Types.Char
                            Data.Text.Internal.safe
                            (GHC.Base.++
                               @ GHC.Types.Char
                               Main.linkShorty2
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  shawty
                                  Main.linkShorty1)) of dt { DEFAULT ->
                     Main.shortyCreated_outer2 dt }
                 } in
                 case resp of wild {
                   Data.Either.Left b1
                   -> case GHC.Base.map
                             @ GHC.Types.Char
                             @ GHC.Types.Char
                             Data.Text.Internal.safe
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Data.Either.$fShowEither3
                                (Database.Redis.Protocol.$w$cshowsPrec
                                   11#
                                   b1
                                   (GHC.Types.[] @ GHC.Types.Char))) of dt { DEFAULT ->
                      Main.shortyCreated_go31
                        (Main.shortyCreated_outer1 dt)
                        (GHC.Types.:
                           @ Data.Text.Internal.Lazy.Text
                           Main.shortyCreated1
                           (GHC.Types.:
                              @ Data.Text.Internal.Lazy.Text
                              karg
                              (GHC.Types.[] @ Data.Text.Internal.Lazy.Text))) }
                   Data.Either.Right b1
                   -> case GHC.Base.map
                             @ GHC.Types.Char
                             @ GHC.Types.Char
                             Data.Text.Internal.safe
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Data.Either.$fShowEither2
                                (Database.Redis.Types.$fShowStatus_$cshowsPrec
                                   Data.Either.$fShowEither4
                                   b1
                                   (GHC.Types.[] @ GHC.Types.Char))) of dt { DEFAULT ->
                      Main.shortyCreated_go31
                        (Main.shortyCreated_outer dt)
                        (GHC.Types.:
                           @ Data.Text.Internal.Lazy.Text
                           Main.shortyCreated1
                           (GHC.Types.:
                              @ Data.Text.Internal.Lazy.Text
                              karg
                              (GHC.Types.[] @ Data.Text.Internal.Lazy.Text))) } }) -}
d588b16e7c5b69a49af58469163c3473
  shortyCreated_go1 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
dc05785154c30bbea028cad097754435
  shortyCreated_go31 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
500e12f6f7552cab121fc72e42a6c404
  shortyCreated_outer ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
a468406c0358f2097bb6b2f1405dd603
  shortyCreated_outer1 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
94078596a6d4bdec189f97c43271c11d
  shortyCreated_outer2 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
ed400987dd1be6df3aee6f14398e79b0
  shortyCreated_outer3 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
319dc6947b856a31e867408930a17f74
  shortyCreated_outer4 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
4207dd2718c77d01eeaa38c31fcb94e0
  shortyFound ::
    Data.Text.Internal.Lazy.Text -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (tbs :: Data.Text.Internal.Lazy.Text) ->
                 Main.shortyFound_go31
                   Main.shortyFound4
                   (GHC.Types.:
                      @ Data.Text.Internal.Lazy.Text
                      tbs
                      (GHC.Types.:
                         @ Data.Text.Internal.Lazy.Text
                         Main.shortyFound3
                         (GHC.Types.:
                            @ Data.Text.Internal.Lazy.Text
                            tbs
                            Main.shortyFound1)))) -}
87052af70f8c88b3f08333a139b471c2
  shortyFound1 :: [Data.Text.Internal.Lazy.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Lazy.Text
                   Main.shortyFound2
                   (GHC.Types.[] @ Data.Text.Internal.Lazy.Text)) -}
796ee3ed732360ee910257d9f91ffa4f
  shortyFound2 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "</a>"#) -}
2fe0dcb7fa3dfec6b4af65186a5266d1
  shortyFound3 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "\">"#) -}
d836811d884561e6973948692f7cfd8d
  shortyFound4 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "<a href=\""#) -}
8a2ed7cc383bbf8bcc754c87e473aed8
  shortyFound_go31 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
9206a4ff5054afe72d653596308b439d
  shortyGen :: GHC.Types.IO GHC.Base.String
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.shortyGen1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R)) -}
daf8be5e1ba6953e77bbc87a1fdb1a2e
  shortyGen1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wloop 7# w2) -}
"SPEC shortyCreated @ (Either Reply Status)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                          (Data.Either.Either
                                                                             Database.Redis.Protocol.Reply
                                                                             Database.Redis.Types.Status))
  Main.shortyCreated @ (Data.Either.Either
                          Database.Redis.Protocol.Reply Database.Redis.Types.Status)
                     $dShow
  = Main.shortyCreated_$sshortyCreated
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

