
==================== FINAL INTERFACE ====================
2018-04-24 18:00:57.2970714 UTC

interface wordNumberTest-0.1.0.0-1kryicfMuLS5kQO4b1cEs0:WordNumber 8022
  interface hash: fe464b243bc59418dbf90fb491713d7a
  ABI hash: e2e9335155c6113c1f861592e2e2a802
  export-list hash: 622cad57544dbea7a23374c0590fe614
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0db3658e8db58f936d8d66225b82f996
  sig of: Nothing
  used TH splices: False
  where
exports:
  WordNumber.digitToWord
  WordNumber.digits
  WordNumber.wordNumber
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.Foldable 4349255461f1285ad885cd2301205c36
import  -/  base-4.10.1.0:Data.List e5312e282ad78d8152090e079f862b53
import  -/  base-4.10.1.0:Data.OldList fdea655c7bec488a3994df222c677ab7
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:GHC.Real 183566a07f0c201dd54a6bc28c33ed14
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
0bf8a3b0287626079101485ca19cbecd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   WordNumber.$trModule3
                   WordNumber.$trModule1) -}
e80c9a2892f96aeb55847d50bf37aa97
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WordNumber.$trModule2) -}
19035f006d38d5446a06f0077e38d344
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WordNumber"#) -}
f3a3aee4920a1452f9ad90b22931584a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WordNumber.$trModule4) -}
b5b75008135d2a18666dc95f482b70d2
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("wordNumberTest-0.1.0.0-1kryicfMuLS5kQO4b1cEs0"#) -}
70844d76052a643710552f71fb50ee21
  $wdigitToWord :: GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT -> WordNumber.digitToWord21
                   0# -> WordNumber.digitToWord19
                   1# -> WordNumber.digitToWord17
                   2# -> WordNumber.digitToWord15
                   3# -> WordNumber.digitToWord13
                   4# -> WordNumber.digitToWord11
                   5# -> WordNumber.digitToWord9
                   6# -> WordNumber.digitToWord7
                   7# -> WordNumber.digitToWord5
                   8# -> WordNumber.digitToWord3
                   9# -> WordNumber.digitToWord1 }) -}
f657c778f5041392be5d5e620898fb5e
  $wdigits :: GHC.Prim.Int# -> [GHC.Types.Int]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
25b38648a52e2eeb07092eef12a4628c
  $wwordNumber :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Base.map
                        @ GHC.Types.Int
                        @ [GHC.Types.Char]
                        WordNumber.digitToWord
                        (WordNumber.$wdigits ww) of wild {
                   [] -> GHC.Types.[] @ GHC.Types.Char
                   : x xs
                   -> WordNumber.wordNumber_go
                        (GHC.Types.:
                           @ [GHC.Types.Char]
                           x
                           (Data.OldList.prependToAll
                              @ [GHC.Types.Char]
                              WordNumber.wordNumber1
                              xs)) }) -}
14a2dfa7f78a09e805076ef2260c2ae2
  digitToWord :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 WordNumber.$wdigitToWord ww1 }) -}
e049c2aa4e5cf901ae905b8c3766c439
  digitToWord1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord2) -}
5f1895b2898709aacde38bd8d70aa3d8
  digitToWord10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("five"#) -}
42344499d6d9ce3979b7abbda36bf518
  digitToWord11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord12) -}
6a86a6ed919f1cb99c6b5846e89ae6ed
  digitToWord12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("four"#) -}
8977ca891564e16b0a67b7a24499f24c
  digitToWord13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord14) -}
19ab7d44e73fca1195c4821200e93a9d
  digitToWord14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("three"#) -}
9c02bcbc3cdf7d063a405e8c663dfbfd
  digitToWord15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord16) -}
205600a5465cad7dea7221cb5d913f9f
  digitToWord16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("two"#) -}
46cb02d1b6fc4075c98c62ee0b57bfe5
  digitToWord17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord18) -}
ed4016c6da920ed65a9aac9d69cbcbc4
  digitToWord18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("one"#) -}
21eef5cdfbcdc12b0fd82791558b557b
  digitToWord19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord20) -}
9cea0b97ef0477e4bb6c2fe4a8ce4b33
  digitToWord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nine"#) -}
18baafcd527b88165552cb2f1e5f9b96
  digitToWord20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("zero"#) -}
c8f6b49f2d1ed7e94d6680290e8937ef
  digitToWord21 :: GHC.Base.String
  {- Strictness: x -}
c8f1d66333a77344f08fb59b03ddc59f
  digitToWord3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord4) -}
3da848c929c7c4ce20f90b99b4969690
  digitToWord4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eight"#) -}
423947a66fdef62e0dc35245cbabaee0
  digitToWord5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord6) -}
78464d35ceadcae6cdf85ddb3f6f0206
  digitToWord6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("seven"#) -}
99866831954ee0bdc18b24b5a1b30189
  digitToWord7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord8) -}
78818329c64f0d165b4d22de240dec2d
  digitToWord8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("six"#) -}
5dc1b348feb097e7c2015386d5d2e078
  digitToWord9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.digitToWord10) -}
e2451222664de8dcab916ba980e8ce7e
  digits :: GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> WordNumber.$wdigits ww1 }) -}
a81c1381423f3ba206b6ed08325fb6b2
  wordNumber :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 WordNumber.$wwordNumber ww1 }) -}
bfc13159ddb8b726e8f6a355b08bc861
  wordNumber1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WordNumber.wordNumber2) -}
e8acf6962e27228c1ca1c1fa0bb97bde
  wordNumber2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
44df1ef0f7c21d9c8c79ece98dd93e6c
  wordNumber_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

