name: semigroupoids
version: 5.2.2
id: semigroupoids-5.2.2-29VRzL6jdNeJ5YKL7ou1EO
key: semigroupoids-5.2.2-29VRzL6jdNeJ5YKL7ou1EO
license: BSD3
copyright: Copyright (C) 2011-2015 Edward A. Kmett
maintainer: Edward A. Kmett <ekmett@gmail.com>
stability: provisional
homepage: http://github.com/ekmett/semigroupoids
synopsis: Semigroupoids: Category sans id
description:
    Provides a wide array of (semi)groupoids and operations for working with them.
    .
    A 'Semigroupoid' is a 'Category' without the requirement of identity arrows for every object in the category.
    .
    A 'Category' is any 'Semigroupoid' for which the Yoneda lemma holds.
    .
    When working with comonads you often have the @\<*\>@ portion of an @Applicative@, but
    not the @pure@. This was captured in Uustalu and Vene's \"Essence of Dataflow Programming\"
    in the form of the @ComonadZip@ class in the days before @Applicative@. Apply provides a weaker invariant, but for the comonads used for data flow programming (found in the streams package), this invariant is preserved. Applicative function composition forms a semigroupoid.
    .
    Similarly many structures are nearly a comonad, but not quite, for instance lists provide a reasonable 'extend' operation in the form of 'tails', but do not always contain a value.
    .
    Ideally the following relationships would hold:
    .
    > Foldable ----> Traversable <--- Functor ------> Alt ---------> Plus           Semigroupoid
    >      |               |            |                              |                  |
    >      v               v            v                              v                  v
    > Foldable1 ---> Traversable1     Apply --------> Applicative -> Alternative      Category
    >                                   |               |              |                  |
    >                                   v               v              v                  v
    >                                 Bind ---------> Monad -------> MonadPlus          Arrow
    >
    .
    Apply, Bind, and Extend (not shown) give rise the Static, Kleisli and Cokleisli semigroupoids respectively.
    .
    This lets us remove many of the restrictions from various monad transformers
    as in many cases the binding operation or @\<*\>@ operation does not require them.
    .
    Finally, to work with these weaker structures it is beneficial to have containers
    that can provide stronger guarantees about their contents, so versions of 'Traversable'
    and 'Foldable' that can be folded with just a 'Semigroup' are added.
category: Control, Comonads
author: Edward A. Kmett
exposed: True
exposed-modules:
    Data.Bifunctor.Apply Data.Functor.Alt Data.Functor.Apply
    Data.Functor.Bind Data.Functor.Bind.Class Data.Functor.Bind.Trans
    Data.Functor.Extend Data.Functor.Plus Data.Groupoid
    Data.Isomorphism Data.Semigroup.Bifoldable
    Data.Semigroup.Bitraversable Data.Semigroup.Foldable
    Data.Semigroup.Foldable.Class Data.Semigroup.Traversable
    Data.Semigroup.Traversable.Class Data.Semigroupoid
    Data.Semigroupoid.Dual Data.Semigroupoid.Ob
    Data.Semigroupoid.Static Data.Traversable.Instances
abi: 6c2d13c082398ad5963e769d80a28ed8
trusted: False
import-dirs: "C:\\Projects\\Haskell\\First-principles\\IN-PROGRESS ch17\\tryingCheckers\\.stack-work\\install\\6db3355d\\lib\\x86_64-windows-ghc-8.0.2\\semigroupoids-5.2.2-29VRzL6jdNeJ5YKL7ou1EO"
library-dirs: "C:\\Projects\\Haskell\\First-principles\\IN-PROGRESS ch17\\tryingCheckers\\.stack-work\\install\\6db3355d\\lib\\x86_64-windows-ghc-8.0.2\\semigroupoids-5.2.2-29VRzL6jdNeJ5YKL7ou1EO"
              C:\Users\Lucas\AppData\Local\Programs\stack\x86_64-windows\msys2-20150512\mingw64\bin
              C:\Users\Lucas\AppData\Local\Programs\stack\x86_64-windows\msys2-20150512\mingw64\lib
dynamic-library-dirs: "C:\\Projects\\Haskell\\First-principles\\IN-PROGRESS ch17\\tryingCheckers\\.stack-work\\install\\6db3355d\\lib\\x86_64-windows-ghc-8.0.2"
                      C:\Users\Lucas\AppData\Local\Programs\stack\x86_64-windows\msys2-20150512\mingw64\bin
                      C:\Users\Lucas\AppData\Local\Programs\stack\x86_64-windows\msys2-20150512\mingw64\lib
data-dir: "C:\\Projects\\Haskell\\First-principles\\IN-PROGRESS ch17\\tryingCheckers\\.stack-work\\install\\6db3355d\\share\\x86_64-windows-ghc-8.0.2\\semigroupoids-5.2.2"
hs-libraries: HSsemigroupoids-5.2.2-29VRzL6jdNeJ5YKL7ou1EO
include-dirs: C:\Users\Lucas\AppData\Local\Programs\stack\x86_64-windows\msys2-20150512\mingw64\include
depends:
    base-4.9.1.0 base-orphans-0.7-8S4ts20sdDDGKcsJJT3Axg
    bifunctors-5.5.2-7kjeTMgMqWJLcl46Jk5O6h
    comonad-5.0.3-1sUq9YbosoKHHQrV5x6ifv containers-0.5.7.1
    contravariant-1.4.1-HxEwbGHiVQw4vdT2dC8TZe
    distributive-0.5.3-CQzfOfECEnE83avAm7o1MS
    hashable-1.2.7.0-ExYn3eXYSfg8Z5H8Kwbxlo
    semigroups-0.18.4-5KX2DQ9KQ5HsuIXwuRjAP
    tagged-0.8.5-JB8QxbqnIhjLCB2R3uAUj4 template-haskell-2.11.1.0
    transformers-0.5.2.0
    transformers-compat-0.6.2-56QlPzJosH7Biiu3wdRzje
    unordered-containers-0.2.9.0-G9hgtIe52XD5gxwrgr4F52
haddock-interfaces: "C:\\Projects\\Haskell\\First-principles\\IN-PROGRESS ch17\\tryingCheckers\\.stack-work\\install\\6db3355d\\doc\\semigroupoids-5.2.2\\semigroupoids.haddock"
haddock-html: "C:\\Projects\\Haskell\\First-principles\\IN-PROGRESS ch17\\tryingCheckers\\.stack-work\\install\\6db3355d\\doc\\semigroupoids-5.2.2"
